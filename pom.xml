<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sourcepit</groupId>
		<artifactId>srcpit-parent</artifactId>
		<version>11</version>
	</parent>

	<groupId>org.sourcepit.tools</groupId>
	<artifactId>maven-bootstrap</artifactId>
	<version>0.10.1</version>
	<packaging>pom</packaging>

	<scm>
		<connection>scm:git:git@github.com:sourcepit/maven-bootstrap.git</connection>
		<tag>maven-bootstrap-0.10.1</tag>
	</scm>

	<modules>
		<module>maven-bootstrap-core</module>
		<module>maven-bootstrap-participation</module>
	</modules>

	<!-- repo to resolve parent pom from -->
	<repositories>
		<repository>
			<id>srcpit-public</id>
			<url>http://nexus.sourcepit.org/content/groups/public/</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.sourcepit.tools</groupId>
				<artifactId>maven-bootstrap-participation</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.sourcepit.tools</groupId>
				<artifactId>maven-bootstrap-core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.sourcepit.common</groupId>
				<artifactId>common-maven</artifactId>
				<version>0.15.0</version>
			</dependency>
			<dependency>
				<groupId>org.sourcepit.common</groupId>
				<artifactId>common-testing</artifactId>
				<version>0.9.0</version>
			</dependency>
			<dependency>
				<groupId>org.sourcepit.common</groupId>
				<artifactId>common-utils</artifactId>
				<version>0.10.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.sourcepit.tools</groupId>
					<artifactId>deploy-maven-plugin</artifactId>
					<version>0.1.0-SNAPSHOT</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.3,)</versionRange>
										<goals>
											<goal>unpack</goal>
											<goal>unpack-dependencies</goal>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>its</id>
			<properties>
				<it.repo.active>true</it.repo.active>
				<it.repo.url>file://${user.dir}/target/it-repository</it.repo.url>
			</properties>
			<modules>
				<module>maven-bootstrap-its</module>
			</modules>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sourcepit.tools</groupId>
						<artifactId>deploy-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>gather-artifacts</id>
								<!-- As far we use our own install mojo that assures that each artifact will be deployed with its base version, we
									can call the deploy goal before the phase install, otherwise not! -->
								<phase>pre-integration-test</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
								<configuration>
									<altDeploymentRepository>it-repo::default::${it.repo.url}</altDeploymentRepository>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>test-jar</id>
			<activation>
				<file>
					<exists>${basedir}/src/test/</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>test-jar</goal>
								</goals>
								<configuration>
									<defaultManifestFile>${project.build.testOutputDirectory}/META-INF/MANIFEST.MF</defaultManifestFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
